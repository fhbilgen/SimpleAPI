name: Deploy Simple API
on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Publish
      run: dotnet publish --configuration Release --no-restore --output ./publish

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: webapi-artifacts
        path: ./publish

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: webapi-artifacts
        path: ./publish
        
   # - name: Copy Files to Azure VM
    #  uses: appleboy/scp-action@v0.1.7
     # with:
      #  host: ${{ secrets.AZURE_HOST }}
       # username: ${{ secrets.AZURE_USERNAME }}
        #key: ${{ secrets.SSH_PRIVATE_KEY }}
        #source: "./publish/*"
        #target: "/home/${{ secrets.AZURE_USERNAME }}/webapi"

    - name: Deploy and Restart Service on Azure VM
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.AZURE_HOST }}
        username: ${{ secrets.AZURE_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          sudo systemctl stop kestrel-webapi.service
          sudo cp -r /home/${{ secrets.AZURE_USERNAME }}/webapi/* /var/www/webapi/
          sudo systemctl start kestrel-webapi.service
          
#    - name: Deploy to Azure Ubuntu Server
#      env:
#        AZURE_HOST: ${{ secrets.AZURE_HOST }}
#        AZURE_USERNAME: ${{ secrets.AZURE_USERNAME }}
#        AZURE_PASSWORD: ${{ secrets.AZURE_PASSWORD }}
#      run: |
#        scp -v -o StrictHostKeyChecking=no -r ./publish/* $AZURE_USERNAME@$AZURE_HOST:/var/www/myapp
#        ssh -T git@github.com $AZURE_USERNAME@$AZURE_HOST 'sudo systemctl restart myapp'
